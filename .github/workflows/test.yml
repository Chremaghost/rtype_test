name: Build and Test rtype on Linux and Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        cpp_compiler: [g++]
        include:
          - os: windows-latest
            cpp_compiler: g++
          - os: ubuntu-latest
            cpp_compiler: g++

    steps:
    - uses: actions/checkout@v4

    - name: Install required system packages on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git libudev-dev autoconf automake libtool \
          libx11-dev libxrandr-dev libxcursor-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev \
          libvorbis-dev libogg-dev libflac-dev libopenal-dev

    - name: Setup Visual Studio Build Tools
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --quiet --includeRecommended"
        choco install cmake --version=3.25.1 --installargs 'ADD_CMAKE_TO_PATH=System'
        Start-Sleep -Seconds 30  # Pause pour laisser le temps à l'installation de s'achever

    - name: Find vcvarsall.bat dynamically
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        $vcvarsallPath = Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\" -Recurse -Filter "vcvarsall.bat" -ErrorAction SilentlyContinue | Select-Object -First 1
        if ($vcvarsallPath) {
          Write-Host "vcvarsall.bat found at: $($vcvarsallPath.FullName)"
          $env:VCVARSALL_PATH = $vcvarsallPath.FullName  # Set the environment variable for later use
        } else {
          Write-Host "Error: vcvarsall.bat not found in common Visual Studio directories!"
          exit 1
        }

    - name: Configure CMake with CPM on Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        if ($env:VCVARSALL_PATH) {
          Write-Host "Attempting to run: '$($env:VCVARSALL_PATH) x64'"
          # Utilisation de cmd.exe pour exécuter la commande avec le bon contexte
          cmd.exe /c ""$env:VCVARSALL_PATH" x64 && cmake -B build -DCMAKE_CXX_COMPILER=g++ -S ."
        } else {
          Write-Host "Error: vcvarsall.bat not found!"
          exit 1
        }

    - name: Install required packages on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install openal boost-msvc14.1 sfml

    - name: Configure CMake with CPM on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        cmake -B build \
        -DCMAKE_CXX_COMPILER=g++ \
        -S .

    - name: Build rtype
      run: cmake --build build

    - name: Test rtype
      working-directory: ./build
      run: ctest --verbose
