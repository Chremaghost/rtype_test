name: Build and Test rtype on Linux and Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        cpp_compiler: [g++, clang++, cl]
        include:
          - os: windows-latest
            cpp_compiler: cl
          - os: ubuntu-latest
            cpp_compiler: g++
          - os: ubuntu-latest
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4

    - name: Install required system packages on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git libudev-dev

    - name: Verify libudev-dev installation
      if: matrix.os == 'ubuntu-latest'
      run: |
        dpkg-query -W -f='${Status}' libudev-dev | grep -q "ok installed" || (echo "libudev-dev is not installed" && exit 1)

    - name: Install Conan
      run: |
        pip install conan

    - name: Create or update default Conan profile
      run: |
        conan profile detect
        echo "tools.system.package_manager:mode=install" >> ~/.conan2/profiles/default

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        conan install . --build=missing --profile=default || (echo "Conan install failed" && exit 1)

    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        conan install . --build=missing --profile=default

    - name: Configure CMake
      run: |
        cmake -B build \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -S .

    - name: Build rtype
      run: cmake --build build

    - name: Test rtype
      working-directory: ./build
      run: ctest --verbose