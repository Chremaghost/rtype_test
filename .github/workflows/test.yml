name: Build and Test rtype on Linux and Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        cpp_compiler: [g++]

    steps:
    - uses: actions/checkout@v4

    - name: Install required system packages on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git libudev-dev autoconf automake libtool \
          libx11-dev libxrandr-dev libxcursor-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev \
          libvorbis-dev libogg-dev libflac-dev libopenal-dev

    - name: Set up MinGW from local repository on Windows
      if: matrix.os == 'windows-latest'
      run: |
        echo "${{ github.workspace }}/mingw64/bin" >> $GITHUB_PATH

    - name: Create necessary directories
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p D:/a/rtype_test/rtype_test/build/_deps/boost-build/libs/log/src/windows

    - name: Check write permissions
      if: matrix.os == 'windows-latest'
      run: |
        echo "Checking permissions for the directory:"
        dir D:/a/rtype_test/rtype_test/build/_deps/boost-build/libs/log/src/windows

    - name: Configure CMake with g++ on Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        $buildDir = "${{ github.workspace }}/build"
        $env:CXX="${{ github.workspace }}/mingw64/bin/g++.exe"
        $env:CC="${{ github.workspace }}/mingw64/bin/gcc.exe"
        ${{ github.workspace }}/mingw64/bin/cmake.exe -B $buildDir -G "Unix Makefiles" -S .

    - name: Configure CMake with g++ on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        cmake -B build -DCMAKE_CXX_COMPILER=g++ -G "Unix Makefiles" -S .

    - name: Build rtype on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: make -C build

    - name: Build rtype on Windows
      if: matrix.os == 'windows-latest'
      run: |
        cd build
        mingw32-make.exe

    - name: Test rtype on both platforms
      working-directory: build
      run: ctest --verbose