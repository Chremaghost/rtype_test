name: Build and Test rtype on Linux and Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        cpp_compiler: [g++, clang++]
        include:
          - os: windows-latest
            cpp_compiler: cl
          - os: ubuntu-latest
            cpp_compiler: g++
          - os: ubuntu-latest
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4

    - name: Install required system packages on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git libudev-dev autoconf automake libtool \
          libx11-dev libxrandr-dev libxcursor-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev \
          libvorbis-dev libogg-dev libflac-dev libopenal-dev

    - name: Setup Visual Studio
      if: matrix.os == 'windows-latest'
      run: |
        choco install visualstudio2022community --package-parameters "--includeOptional --quiet"
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        
        # Check if the vcvarsall.bat exists and set the path
        if (Test-Path "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat") {
          & "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat" x64
        } else {
          Write-Error "vcvarsall.bat not found. Ensure Visual Studio is installed correctly."
          exit 1
        }

    - name: Configure CMake with CPM
      run: |
        cmake -B build \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -S .

    - name: Install required packages on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install openal boost-msvc14.1 sfml

    - name: Build rtype
      run: cmake --build build

    - name: Test rtype
      working-directory: ./build
      run: ctest --verbose